using System.Collections.Generic;
using System.Linq;
using static LogUtilities;

public static class BellyRubMessages
{
    static internal List<EventString> BellyRubMessagesList = new List<EventString>()
    {
        new EventString((i) => $"<b>{i.Unit.Name}</b> takes the time to roll on {GPPHis(i.Unit)} back and rub {GPPHis(i.Unit)} paw against {GPPHis(i.Unit)} soft belly, melting up {GPPHis(i.Unit)} prey more and more.",
            priority: 11, conditional: s => s.Target == s.Unit, actorRace: Race.FeralLion),
        new EventString((i) => $"While <b>{i.Prey.Name}</b> is fighting for {GPPHis(i.Prey)} life inside the {GetRaceDescSingl(i.Unit)}, <b>{i.Unit.Name}</b> appreciates the internal pets and reciprocates by lazily pawing at {GPPHis(i.Unit)} gut.",
            priority: 11, conditional: s => s.Target == s.Unit && !PreyDead(s), actorRace: Race.FeralLion),
        new EventString((i) => $"Much like a playful kitten catching movement under a blanket, <b>{i.Unit.Name}</b> boops every little bulge that shows up on {GPPHis(i.Unit)} tummy, inadvertently creating an even more deadly gurgling hell for <b>{i.Prey.Name}</b>.",
            priority: 11, conditional: s => s.Target == s.Unit && !PreyDead(s), actorRace: Race.FeralLion),
        new EventString((i) => $"<b>{ApostrophizeWithOrWithoutS(i.Unit.Name)}</b> paws purposely trace <b>{ApostrophizeWithOrWithoutS(i.Prey.Name)}</b> faint outline on {( i.Target == i.Unit ? GPPHis(i.Unit) : "<b>" + i.Target.Name + "</b>'s")} middle. The thorough massage stimulates the {ApostrophizeWithOrWithoutS(GetRaceDescSingl(i.Target))} digestion and rubs {GPPHis(i.Target)} juices all over <b>{i.Prey.Name}</b>.",
            priority: 11, actorRace: Race.FeralLion, targetRace: Race.FeralLion, conditional: s => !PreyDead(s)), // TODO: Cattitude or volunteers, implement a way to tell what appendage a creature uses for interactions. I think an enumerable would be a good fit, but can be any sort of presence check too.
        new EventString((i) => $"<b>{ApostrophizeWithOrWithoutS(i.Unit.Name)}</b> paws trace each bend in {( i.Target == i.Unit ? GPPHis(i.Unit) : "<b>" + ApostrophizeWithOrWithoutS(i.Target.Name) + "</b>")} innards, guiding <b>{ApostrophizeWithOrWithoutS(i.Prey.Name)}</b> messy remains on their journey through the big cat.",
            priority: 11, actorRace: Race.FeralLion, targetRace: Race.FeralLion, conditional: s => PreyDead(s)),
        new EventString((i) => $"<b>{i.Unit.Name}</b> lifts a hind leg and scratches {GPPHis(i.Unit)} full tummy with it, stirring the contents within.{(!PreyDead(i) ? "\nThe rhythm of the induced swaying is almost hypnotic to <b>" + i.Prey.Name + "</b>." : "")}",
            priority: 11, conditional: s => s.Target == s.Unit, actorRace: Race.FeralLion),
        new EventString((i) => $"<b>{i.Unit.Name}</b> decides to pet {GPPHimself(i.Unit)}, accidentally squishing out <b>{ApostrophizeWithOrWithoutS(i.Prey.Name)}</b> last breathable air as a meaty burp!",
            priority: 11, conditional: s => s.Target == s.Unit && !PreyDead(s) && CanBurp(s), actorRace: Race.FeralLion),
        new EventString((i) => $"<b>{i.Unit.Name}</b> decides to pet {GPPHis(i.Unit)} abdomen, squishing out what might have been <b>{ApostrophizeWithOrWithoutS(i.Prey.Name)}</b> dying breath as a juicy fart.",
            priority: 11, conditional: s => InStomach(s) && !InWomb(s) && s.Target == s.Unit && PreyDead(s) && Farts(s) && PreyDead(s), actorRace: Race.FeralLion),
        new EventString((i) => $"<b>{i.Unit.Name}</b> spiritedly flops on {GPPHis(i.Unit)} back to give {GPPHis(i.Unit)} {PreyLocStrings.ToSyn(i.preyLocation)} some paw attention, kneading the newly dissolved <b>{i.Prey.Name}</b>-mass deeper into {GPPHimself(i.Unit)}.",
            priority: 11, conditional: s => s.Target == s.Unit && PreyDead(s), actorRace: Race.FeralLion),
        new EventString((i) => $"<b>{i.Unit.Name}</b> relaxedly takes on a loaf position, squishing {GPPHis(i.Unit)} food and willing it to churn away faster.",
            priority: 11, conditional: s => s.Target == s.Unit, actorRace: Race.FeralLion),


        new EventString((i) => $"<b>{i.Unit.Name}</b> nuzzles <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> belly affectionately, then rubs {GPPHis(i.Unit)} entire body length across it while passing below it, {GPPHis(i.Unit)} butt squishing up against its contents especially firmly.{(!PreyDead(i) ? " <b>" + i.Prey.Name + "</b> feels everything." : "")}",
            priority: 11, targetRace: Race.FeralLion, conditional: s => s.Target != s.Unit, actorRace: Race.FeralLion),
        new EventString((i) => $"<b>{i.Unit.Name}</b> walks by <b>{i.Target.Name}</b> and gives {GPPHis(i.Target)} {(PreyDead(i) ? "sloshing" : "squirming")} belly some stimulating licks in passing.",
            priority: 11, targetRace: Race.FeralLion, conditional: s => s.Target != s.Unit, actorRace: Race.FeralLion),
        new EventString((i) => $"<b>{i.Unit.Name}</b> finds <b>{i.Target.Name}</b> lazing on {GPPHis(i.Target)} back and gives {GPPHis(i.Target)} {PreyLocStrings.ToSyn(i.preyLocation)} a vigorous nuzzle, pressing {GPPHis(i.Unit)} face into the tummy{((PreyDead(i) && Farts(i) && InStomach(i)) ? ", stirring the liquefied prey and causing a little bit of <b>" + i.Prey.Name + "</b> gas to be squished out of "+ GPPHis(i.Target) + " butt": "")}.",
            priority: 11, targetRace: Race.FeralLion, conditional: s => s.Target != s.Unit, actorRace: Race.FeralLion),
        new EventString((i) => $"<b>{i.Unit.Name}</b> partially lays {GPPHimself(i.Unit)} on top of <b>{i.Target.Name}</b> to passionately groom {GPPHis(i.Target)} capacious gut, causing {GPPHis(i.Target)} prey to be assaulted by a cascade of fresh gastric juices and fervid churning.",
            priority: 11, targetRace: Race.FeralLion, conditional: s => s.Target != s.Unit, actorRace: Race.FeralLion),
        new EventString((i) => $"<b>{i.Target.Name}</b> doesn't suspect the surprise attack, as <b>{i.Unit.Name}</b> playfully jumps on their back with a tight hug, chewing on their neck while kneading their belly into churning overtures.",
            priority: 11, targetRace: Race.FeralLion, conditional: s => s.Target != s.Unit, actorRace: Race.FeralLion),
        new EventString((i) => $"<b>{i.Unit.Name}</b> shoves <b>{i.Target.Name}</b> over and rolls {GPPHim(i.Target)} on {GPPHis(i.Target)} back, then lays {GPPHimself(i.Unit)} on top, squishing bellies together and making their gurgles vibrate eachother's prey.",
            priority: 11, conditional: s => TacticalUtilities.GetActorOf(s.Unit).HasBelly && s.Target != s.Unit, targetRace: Race.FeralLion, actorRace: Race.FeralLion),
        new EventString((i) => $"<b>{i.Unit.Name}</b> flops against <b>{i.Target.Name}</b>, making both fall over. The ensuing tangle of wiggly feline cuddles does wonders for digestion.",
            priority: 11, conditional: s => TacticalUtilities.GetActorOf(s.Unit).HasBelly && s.Target != s.Unit, targetRace: Race.FeralLion, actorRace: Race.FeralLion),
        new EventString((i) => $"<b>{i.Unit.Name}</b> head-nudges <b>{i.Target.Name}</b> to have {GPPHim(i.Target)} flop onto {GPPHis(i.Target)} side, before hunkering down and kneading {GPPHis(i.Target)} tummy like dough. <b>{i.Target.Name}</b> flinches a little from the claws, but in return, {GPPHe(i.Target)} can practically feel <b>{i.Prey.Name}</b> soften with each squish of the leonine paws.",
            priority: 11, targetRace: Race.FeralLion, conditional: s => s.Target!= s.Unit, actorRace: Race.FeralLion),
        new EventString((i) => $"After settling down on <b>{i.Target.Name}</b> and applying {GPPHis(i.Unit)} full weight, <b>{ApostrophizeWithOrWithoutS(i.Unit.Name)}</b> deep kiss is met with a <b>{i.Prey.Name}</b>-flavored burp. There's no longer space for luxuries like \'squirming\' or \'breathing\' in <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> {PreyLocStrings.ToSyn(i.preyLocation)}.",
            priority: 11, conditional: s => InStomach(s) && s.Target != s.Unit, targetRace: Race.FeralLion, actorRace: Race.FeralLion),
        new EventString((i) => $"<b>{i.Target.Name}</b> is about to rub {GPPHis(i.Target)} own abdomen, when <b>{i.Unit.Name}</b> quickly claims the spot and starts grinding against the bulge. The two lions make out, and this evolves into mutual dry humping, further threatening to liquefy any genital captives as the sex juices start flowing.",
            priority: 11, conditional: s => InWomb(s) && s.Target != s.Unit, targetRace: Race.FeralLion, actorRace: Race.FeralLion),
        new EventString((i) => $"<b>{i.Unit.Name}</b> finds <b>{i.Target.Name}</b> freshly flopped onto {GPPHis(i.Target)} back, haunches spread to show off {GPPHis(i.Target)} fullness. <b>{i.Unit.Name}</b> decides that this belly in particular needs grooming, and thoroughly licks it with {GPPHis(i.Unit)} rough tongue, stimulating the kitty's digestion.",
            priority: 11, targetRace: Race.FeralLion, conditional: s => s.Target!= s.Unit, actorRace: Race.FeralLion),
        new EventString((i) => $"A stuffed <b>{i.Target.Name}</b> who's lazing on the floor gets smushed under the floppy form of <b>{i.Unit.Name}</b>, whose wiggles do wonders for the breakdown of the former's latest catch.",
            priority: 11, targetRace: Race.FeralLion, conditional: s => s.Target!= s.Unit && SizeDiff(s,1f), actorRace: Race.FeralLion),
        new EventString((i) => $"<b>{i.Target.Name}</b> and <b>{i.Unit.Name}</b> find the time to share a big, squishy lion hug. As their pawed limbs tighten around eachother, so does the embrace of <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> messy innards around <b>{i.Prey.Name}</b>.",
            priority: 11, targetRace: Race.FeralLion, conditional: s => s.Target!= s.Unit, actorRace: Race.FeralLion),

        new EventString((i) => $"<b>{i.Unit.Name}</b> stretches and shifts on the ground, moving bulges in {GPPHis(i.Unit)} belly to more comfortable positions.",
            actorRace: Race.Serpent, priority: 11, conditional: s => s.Target == s.Unit),
        new EventString((i) => $"<b>{i.Unit.Name}</b> stretches and shifts on the ground, moving bulges in {GPPHis(i.Unit)} belly to more comfortable positions.",
            actorRace: Race.Lamia, priority: 11, conditional: s => s.Target == s.Unit),

        new EventString((i) => $"<b>{i.Unit.Name}</b> massages {GPPHis(i.Unit)} own belly, its contents shifting under {GPPHis(i.Unit)} hands.",
            priority: 10, conditional: s => s.Target == s.Unit),
        new EventString((i) => $"<b>{i.Unit.Name}</b> massages {GPPHimself(i.Unit)}, moving bulges in {GPPHis(i.Unit)} belly to more comfortable positions.",
            priority: 10, conditional: s => s.Target == s.Unit),
        new EventString((i) => $"{i.Unit.Name} puts {GPPHis(i.Unit)} hands on {GPPHis(i.Unit)} belly, feeling the prey struggling within.",
            priority: 10, conditional: s => s.Target == s.Unit),
        new EventString((i) => $"{i.Unit.Name} slaps {GPPHis(i.Unit)} belly, taunting the prey within.",
            priority: 10, conditional: s => s.Target == s.Unit),
        new EventString((i) => $"{i.Unit.Name} squishes {GPPHis(i.Unit)} gurgling gut, enjoying its wobble.",
            priority: 10, conditional: s => s.Target == s.Unit),

        new EventString((i) => $"<b>{i.Unit.Name}</b> coils around <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> {PreyLocStrings.ToSyn(PreyLocation.stomach)}, enjoying its warmth and movement.",
            actorRace: Race.Serpent, priority: 9, conditional: s => s.Target == s.Unit),
        new EventString((i) => $"<b>{i.Unit.Name}</b> coils around <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> {PreyLocStrings.ToSyn(PreyLocation.stomach)}, enjoying its warmth and movement.",
            actorRace: Race.Lamia, priority: 9, conditional: s => s.Target == s.Unit),

        new EventString((i) => $"<b>{i.Target.Name}</b> nervously asks <b>{i.Unit.Name}</b> for help as {GPPHis(i.Target)}'s body makes a squelching noise, the <b>{i.Unit.Name}</b> laughs and pats the newbie’s full belly.",
            priority: 9, conditional: s=> TargetFirstTime(s) && (Equals(s.Target.Side, s.Unit.Side))),
            
        // romance
        new EventString((i) => $"<b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> nipples perk in anticipation as <b>{i.Unit.Name}</b> presses {GPPHimself(i.Unit)} into {GPPHis(i.Target)} sensitive midsection.",
            priority: 8, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s) && s.Target.HasBreasts),
        new EventString((i) => $"<b>{i.Unit.Name}</b> straddles <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> sloshing stomach, using {GPPHis(i.Unit)} weight to pack the stomach’s contents tighter. <b>{i.Target.Name}</b> quivers as {GPPHis(i.Target)} crush bounces up and down on top of {GPPHim(i.Target)}.",
            priority: 8, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s)),
        new EventString((i) => $"As <b>{i.Unit.Name}</b> touches {GPPHim(i.Target)}, <b>{i.Target.Name}</b> places {GPPHis(i.Target)} hands atop {GPPHis(i.Unit)} and starts exploring {GPPHis(i.Target)}'s body’s most sensitive areas.",
            priority: 8, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s)),
        new EventString((i) => $"<b>{i.Target.Name}</b> pinches {GPPHis(i.Target)} nipples as {GPPHis(i.Target)} body is assailed by an intoxicating sensuality as <b>{i.Unit.Name}</b> moves {GPPHis(i.Unit)} digits across {GPPHis(i.Target)} form.",
            priority: 8, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s) && s.Target.HasBreasts),
        new EventString((i) => $"\"You know I’ve eaten people for less than touching me, right?\" <b>{i.Target.Name}</b> confidently asks in a husky voice, \"Don’t stop.\"",
            priority: 8, conditional: s => ReqTargetCompatibleLewd(s) && ActorHumanoid(s)),
        new EventString((i) => $"After massaging for a time, <b>{i.Unit.Name}</b> slowly reaches beneath the gurgling tummy and starts to rub {GPPHis(i.Unit)} hand against <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> sensitive nethers, eliciting a ragged gasp from the fearsome predator.",
            priority: 8, conditional: s => ReqTargetCompatibleLewd(s)),
        new EventString((i) => $"<b>{i.Target.Name}</b> pushes <b>{i.Unit.Name}</b> over and promptly sits {GPPHimself(i.Target)} onto {GPPHis(i.Unit)} face while resting {GPPHis(i.Unit)} engorged tummy against {GPPHis(i.Target)} chest.",
            priority: 8, conditional: s => ReqTargetCompatible(s)),
        new EventString((i) => $"<b>{i.Unit.Name}</b> fumbles while massaging the predator’s convulsing bulge, distracted by {GPPHis(i.Target)} endowments. <b>{i.Target.Name}</b> finds the shy display absolutely adorable.",
            priority: 8, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s) && s.Target.HasDick),
        new EventString((i) => $"<b>{i.Unit.Name}</b> presses {GPPHimself(i.Unit)} close and hoists <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> tummy, making its contents slosh deeper into the blushing predator’s bowels.",
            priority: 8, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatible(s)),
        new EventString((i) => $"Coming from behind, <b>{i.Unit.Name}</b> grabs onto <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> hips and slowly works {GPPHis(i.Unit)} way up to {GPPHis(i.Target)} waist, around {GPPHis(i.Target)} bloated belly and up to {GPPHis(i.Target)} heaving chest.",
            priority: 8, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s)),
        new EventString((i) => $"<b>{i.Unit.Name}</b> can’t resist {GPPHis(i.Unit)} urges any longer and forcefully thrust{SIfSingular(i.Unit)} {GPPHimself(i.Unit)} against the writhing midsection. <b>{i.Target.Name}</b> had been waiting to elicit such an eager response and immediately capitalizes on the amorous advance.",
            priority: 8, conditional: s => (Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s))),
        new EventString((i) => $"<b>{i.Target.Name}</b> was about to have {GPPHis(i.Target)} way with <b>{i.Unit.Name}</b>, but is caught off guard by just how caring {GPPHeIs(i.Unit)} in caressing {GPPHis(i.Target)} body and decides to let the affectionate massage continue.",
            priority: 8, conditional: s => ReqTargetCompatibleLewd(s)),
        new EventString((i) => $"<b>{i.Unit.Name}</b> can’t help but get lost in <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> eyes as {GPPHe(i.Unit)} rub{SIfSingular(i.Unit)} {GPPHim(i.Target)}.",
            priority: 8, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatible(s)),
        new EventString((i) => $"<b>{i.Target.Name}</b> lets out a soft moan as <b>{ApostrophizeWithOrWithoutS(i.Unit.Name)}</b> hands wrap around {GPPHis(i.Target)} engorged belly.",
            priority: 8, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s)),
        new EventString((i) => $"<b>{i.Target.Name}</b> refuses to let <b>{i.Unit.Name}</b> touch {GPPHim(i.Target)} but instantly swoons as {GPPHis(i.Unit)} hands press into {GPPHis(i.Target)} soft midsection.",
            priority: 8, conditional: s => ReqTargetCompatible(s)),
        new EventString((i) => $"<b>{i.Target.Name}</b> eyes <b>{i.Unit.Name}</b> seductively as {GPPHis(i.Unit)} hands press against {GPPHis(i.Target)} midsection.",
            priority: 8, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatible(s)),
        new EventString((i) => $"<b>{i.Unit.Name}</b> grabs onto <b>{i.Target.Name}</b> pressing {GPPHimself(i.Unit)} against {GPPHis(i.Target)} soft body and forcing {GPPHim(i.Target)} into a deep kiss.",
            priority: 8, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatible(s)),
        new EventString((i) => $"<b>{i.Unit.Name}</b> begins to lean into <b>{i.Target.Name}</b> for a kiss as {GPPHe(i.Unit)} knead{SIfSingular(i.Unit)} {GPPHis(i.Target)} stomach. <b>{i.Target.Name}</b> doesn’t resist.",
            priority: 8, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatible(s)),
        new EventString((i) => $"<b>{i.Target.Name}</b> wishes this moment could last forever as <b>{i.Unit.Name}</b> presses {GPPHis(i.Unit)} hands against {GPPHis(i.Target)} sensitive body.",
            priority: 8, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatible(s)),
        new EventString((i) => $"<b>{i.Target.Name}</b> begins to pant heavily as <b>{i.Unit.Name}</b> handles {GPPHis(i.Target)} body.",
            priority: 8, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s)),
        new EventString((i) => $"\"S - Stop, I’m s…sensitive!\" <b>{i.Target.Name}</b> protests as <b>{i.Unit.Name}</b> squeezes {GPPHis(i.Target)} midsection, relieving digestion.",
            priority: 8, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s) && ActorHumanoid(s)),
        new EventString((i) => $"\"You know, while I might be full, I still have plenty of room in my bed for one more,\" <b>{i.Target.Name}</b> says to <b>{i.Unit.Name}</b> as {GPPHe(i.Unit)} feel{SIfSingular(i.Unit)} {GPPHis(i.Target)} enticing body.",
            priority: 8, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s) && ActorHumanoid(s)),
        new EventString((i) => $"<b>{i.Unit.Name}</b> gives <b>{i.Target.Name}</b> an amorous hug, pushing the contents of {GPPHis(i.Target)} gut deeper into {GPPHis(i.Target)} intestines.",
            priority: 8, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatible(s)),
        new EventString((i) => $"<b>{i.Target.Name}</b> lets out an unexpected moan as <b>{i.Unit.Name}</b> presses {GPPHis(i.Unit)} finger into {GPPHis(i.Target)} belly’s neglected underside.",
            priority: 8, conditional: s => ReqTargetCompatibleLewd(s)),
        new EventString((i) => $"<b>{i.Target.Name}</b> shakily tells <b>{i.Unit.Name}</b> to leave {GPPHim(i.Target)} alone, but {GPPHis(i.Target)} gurgling body melts into {GPPHis(i.Unit)} hands as soon as {GPPHe(i.Unit)} touch{EsIfSingular(i.Unit)} {GPPHim(i.Target)}.",
            priority: 8, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s)),
        new EventString((i) => $"<b>{i.Unit.Name}</b> meticulously massages <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> engorged midsection, fearing that a poor job would add {GPPHim(i.Unit)} to the gurgling stew. <b>{i.Target.Name}</b> loves <b>{ApostrophizeWithOrWithoutS(i.Unit.Name)}</b> amorous attention.",
            priority: 8, conditional: s => ReqTargetCompatible(s)),
        new EventString((i) => $"<b>{i.Target.Name}</b> can’t believe {GPPHis(i.Target)} luck when {GPPHis(i.Target)} crush begins massaging {GPPHim(i.Target)}. <b>{i.Unit.Name}</b> fears for {GPPHis(i.Unit)} life as {GPPHe(i.Unit)} consider{SIfSingular(i.Unit)} the tummy’s current occupant.",
            priority: 8, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s)),

        new EventString((i) => $"<b>{i.Target.Name}</b> grabs onto <b>{i.Unit.Name}</b> and presses {GPPHis(i.Unit)} face against {GPPHis(i.Target)} gurgling gut, resting one hand against the small of {GPPHis(i.Target)} back to push {GPPHis(i.Target)} stomach out even further while the other lovingly rubs the back of {GPPHis(i.Target)} potential mate’s head. While <b>{i.Unit.Name}</b> was initially nervous, the methodic sloshing coming from within the squishy belly calms {GPPHim(i.Unit)} and {GPPHe(i.Target)} begin{SIfSingular(i.Unit)} rubbing it with awe.",
            priority: 8, conditional: s => ReqTargetCompatible(s) && ActorHumanoid(s) && Friendly(s)),
        new EventString((i) => $"Exhausted from the process of digestion, <b>{i.Target.Name}</b> lies down, breathing heavily as {GPPHis(i.Target)} gut pulsates. <b>{i.Unit.Name}</b> takes the opportunity to help. Going over, {GPPHe(i.Unit)} push{EsIfSingular(i.Unit)} the bloated stomach towards the lying predator’s chest creating a chorus of sloshing. With the huge gut out of the way, <b>{i.Unit.Name}</b> begins to go to work relieving {GPPHis(i.Target)} stress via carnal pleasures. <b>{i.Target.Name}</b> soon returns to the battlefield, renewed and ready to continue.",
            priority: 8, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s)),

        new EventString((i) => $"<b>{i.Target.Name}</b> can’t believe {GPPHis(i.Target)} luck when {GPPHis(i.Target)} crush begins massaging {GPPHim(i.Target)}. <b>{i.Unit.Name}</b> fears for {GPPHis(i.Unit)} life as {GPPHe(i.Unit)} consider{SIfSingular(i.Unit)} the tummy’s current occupant.",
            priority: 8, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s)),

        new EventString((i) => $"<b>{i.Unit.Name}</b> massages <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> belly, its contents shifting under {GPPHis(i.Unit)} hands.",
            priority: 8, conditional: s => Equals(s.Target.Side, s.Unit.Side)),
        new EventString((i) => $"<b>{i.Target.Name}</b> basks in <b>{ApostrophizeWithOrWithoutS(i.Unit.Name)}</b> attentions as {GPPHe(i.Unit)} massage{SIfSingular(i.Unit)} {GPPHis(i.Target)} tummy.",
            priority: 8, conditional: s => Equals(s.Target.Side, s.Unit.Side)),
        new EventString((i) => $"<b>{i.Target.Name}</b> sweats nervously as <b>{i.Unit.Name}</b> presses {GPPHis(i.Unit)} hands into {GPPHis(i.Target)} deadly stomach.",
            priority: 8, conditional: s => Equals(s.Target.Side, s.Unit.Side)),
        new EventString((i) => $"<b>{i.Target.Name}</b> is surprised when <b>{i.Unit.Name}</b> suddenly starts massaging {GPPHis(i.Target)} wobbling belly. {Capitalize(GPPHe(i.Target))} look{SIfSingular(i.Target)} embarrassed but do{EsIfSingular(i.Target)}n’t recoil from the touch.",
            priority: 8),
        new EventString((i) => $"<b>{i.Target.Name}</b> tenses when <b>{i.Unit.Name}</b> starts touching {GPPHim(i.Target)} but begins to relax as {GPPHis(i.Target)} digestion is relieved.",
            priority: 8),

        //Deer belly rubs
        new EventString((i) => $"Feeling the obvious presence of something within, <b>{i.Unit.Name}</b> asks if <b>{i.Target.Name}</b> has seen where <b>{i.Prey.Name}</b> went. With a blush and a bleat, {GPPHe(i.Target)} say{SIfSingular(i.Target)} that {GPPHeIsAbbr(i.Target)} turning {GPPHim(i.Prey)} into nothing but deer fat for <b>{i.Unit.Name}</b> to play with.",
            targetRace: Race.Deer, priority: 8, conditional: s => ReqTargetCompatibleLewd(s) && FriendlyPrey(s) && !Endo(s)),
        new EventString((i) => $"<b>{i.Target.Name}</b> is startled as <b>{ApostrophizeWithOrWithoutS(i.Unit.Name)}</b> digits press into {GPPHis(i.Target)} bloated gut. The deer part of {GPPHim(i.Target)} wanting to bolt at the sudden sensation but as {GPPHis(i.Unit)} caress continues, the skittish predator shyly leans into {GPPHim(i.Unit)}.",
            targetRace: Race.Deer, priority: 8, conditional: s => ReqTargetCompatibleLewd(s)),
        new EventString((i) => $"<b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> puffy tail begins to wiggle as <b>{i.Unit.Name}</b> massages the cervid's hefty tummy, {GPPHe(i.Target)} do{EsIfSingular(i.Target)}n't even mind when {GPPHis(i.Unit)} touch begins to drift to spots aside from {GPPHis(i.Target)} belly.",
            targetRace: Race.Deer, priority: 8, conditional: s => ReqTargetCompatibleLewd(s)),
        new EventString((i) => $"As <b>{i.Target.Name}</b> moans with discomfort from hefting around such a heavy gut, <b>{i.Unit.Name}</b> comes over to help the herbivore steady {GPPHis(i.Target)} troubled tummy much to the faun's bashful gratitude.",
            targetRace: Race.Deer, priority: 8, conditional: s => ReqTargetCompatibleLewd(s)),
        new EventString((i) => $"<b>{i.Unit.Name}</b> rests one hand against the small of <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> back while the other gently holds the side of the {GetRaceDescSingl(i.Unit)}'s gut. This affection makes {GPPHim(i.Target)} wonder if this is what it would be like to start a family with {GPPHim(i.Unit)}, just without the horrid indigestion.",
            targetRace: Race.Deer, priority: 8, conditional: s => ReqTargetCompatibleLewd(s)),
        new EventString((i) => $"<b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> ears turn bright red as <b>{i.Unit.Name}</b> lifts {GPPHis(i.Target)} swollen gut and lowers {GPPHis(i.Unit)} head between {GPPHis(i.Target)} furry legs and uses {GPPHis(i.Unit)} tongue to get a taste of venison.",
            targetRace: Race.Deer, priority: 8, conditional: s => ReqTargetCompatibleLewd(s)),
        new EventString((i) => $"<b>{i.Unit.Name}</b> approaches with confident purpose, making <b>{i.Target.Name}</b> think {GPPHe(i.Target)} were about to be whisked away for passionate sex. However, when {GPPHe(i.Unit)} arrive{SIfSingular(i.Unit)}, {GPPHe(i.Unit)} begin{SIfSingular(i.Unit)} rubbing the {GetRaceDescSingl(i.Target)}'s fluffy ears. While <b>{i.Target.Name}</b> bleats angrily at the misunderstanding, {GPPHe(i.Target)} doesn't tell {GPPHim(i.Unit)} to stop.",
            targetRace: Race.Deer, priority: 8, conditional: s => ReqTargetCompatibleLewd(s)),
        new EventString((i) => $"<b>{i.Target.Name}</b> shyly tells <b>{i.Unit.Name}</b> that {GPPHe(i.Unit)} can join {GPPHim(i.Target)} in the coming season's rut if {GPPHe(i.Unit)} want{SIfSingular(i.Unit)} to, as {GPPHe(i.Unit)} massage{SIfSingular(i.Unit)} the herbivore's overworked tummy.",
            targetRace: Race.Deer, priority: 8, conditional: s => ReqTargetCompatibleLewd(s)),
        new EventString((i) => $"Panting, <b>{i.Target.Name}</b> meekly explains that unchecked breeding can lead to dangerous overpopulation for faun territory. The half-hearted warning doesn't stop <b>{i.Unit.Name}</b> from pushing {GPPHis(i.Target)} squishy gut out of the way and satisfying them both!",
            targetRace: Race.Deer, priority: 8, conditional: s => ReqTargetCompatibleLewd(s)),
        new EventString((i) => $"Between shy bleats, as {GPPHis(i.Target)} lover rubs {GPPHis(i.Target)} engorged gut, <b>{i.Target.Name}</b> calls <b>{i.Unit.Name}</b> {GPPHis(i.Target)} handsome stag!",
            targetRace: Race.Deer, priority: 8, conditional: s => ReqTargetCompatibleLewd(s) && s.Unit.GetGender() == Gender.Male),
        new EventString((i) => $"As {GPPHis(i.Unit)} partner bellows and moans from an indigestion riddled belly, <b>{i.Unit.Name}</b> asks <b>{i.Target.Name}</b> why {GPPHe(i.Target)} keep{SIfSingular(i.Target)} putting {GPPHimself(i.Target)} through this. The faun blushes while looking away, then says it's because {GPPHe(i.Target)} know{SIfSingular(i.Target)} {GPPHe(i.Unit)} secretly like{SIfSingular(i.Unit)} it.",
            targetRace: Race.Deer, priority: 8, conditional: s => ReqTargetCompatibleLewd(s) && !FirstTime(s)),

        new EventString((i) => $"\"Who's a good {GetGenderString(i.Target, "girl", "boy", "wolf")}?\" <b>{i.Unit.Name}</b> says as {GPPHe(i.Unit)} rub{SIfSingular(i.Unit)} <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> belly. The wolf lies down, {GPPHis(i.Target)} tongue lolling out, tail rapidly wagging, and leg kicking as <b>{i.Unit.Name}</b> rubs {GPPHis(i.Target)} belly in all the right places.",
            targetRace: Race.Wolf, priority: 9, conditional: s => (s.Target != s.Unit)),
        new EventString((i) => $"\"Who's a good {GetGenderString(i.Target, "girl", "boy", "wolf")}?\" <b>{i.Unit.Name}</b> says as {GPPHe(i.Unit)} rub{SIfSingular(i.Unit)} <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> belly. The wolf lies down, {GPPHis(i.Target)} tongue lolling out, tail rapidly wagging, and leg kicking as <b>{i.Unit.Name}</b> rubs {GPPHis(i.Target)} belly in all the right places. \"I am!\" <b>{i.Target.Name}</b> exclaims.",
            targetRace: Race.Wolf, priority: 9, conditional: s => (s.Target != s.Unit)),

        new EventString((i) => $"\"Who's a good {GetGenderString(i.Target, "girl", "boy", "wolf")}?\" <b>{i.Unit.Name}</b> says as {GPPHe(i.Unit)} rub{SIfSingular(i.Unit)} <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> belly. The wolf lies down, {GPPHis(i.Target)} tongue lolling out, tail rapidly wagging, and leg kicking as <b>{i.Unit.Name}</b> rubs {GPPHis(i.Target)} belly in all the right places.",
            targetRace: Race.FeralWolve, priority: 9, conditional: s => (s.Target != s.Unit)),
        new EventString((i) => $"\"Who's a good {GetGenderString(i.Target, "girl", "boy", "wolf")}?\" <b>{i.Unit.Name}</b> says as {GPPHe(i.Unit)} rub{SIfSingular(i.Unit)} <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> belly. The wolf lies down, {GPPHis(i.Target)} tongue lolling out, tail rapidly wagging, and leg kicking as <b>{i.Unit.Name}</b> rubs {GPPHis(i.Target)} belly in all the right places. \"You are! Yes you are!\" <b>{i.Unit.Name}</b> exclaims.",
            targetRace: Race.FeralWolve, priority: 9, conditional: s => (s.Target != s.Unit)),

        new EventString((i) => $"\"Who's a good {GetGenderString(i.Target, "girl", "boy", "dog")}?\" <b>{i.Unit.Name}</b> says as {GPPHe(i.Unit)} rub{SIfSingular(i.Unit)} <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> belly. The dog lies down, {GPPHis(i.Target)} tongue lolling out, tail rapidly wagging, and leg kicking as <b>{i.Unit.Name}</b> rubs {GPPHis(i.Target)} belly in all the right places.",
            targetRace: Race.Dog, priority: 9, conditional: s => (s.Target != s.Unit) ),
        new EventString((i) => $"\"Who's a good {GetGenderString(i.Target, "girl", "boy", "dog")}?\" <b>{i.Unit.Name}</b> says as {GPPHe(i.Unit)} rub{SIfSingular(i.Unit)} <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> belly. The dog lies down, {GPPHis(i.Target)} tongue lolling out, tail rapidly wagging, and leg kicking as <b>{i.Unit.Name}</b> rubs {GPPHis(i.Target)} belly in all the right places. \"I am! I am a good {GetGenderString(i.Target, "boy", "girl", "dog")}!\" <b>{i.Target.Name}</b> happily exclaims.",
            targetRace: Race.Dog, priority: 9, conditional: s => (s.Target != s.Unit)),

        new EventString((i) => $"\"Who’s a good {BoyGirl(i.Target)}?\" <b>{i.Unit.Name}</b> asks while pressing {GPPHis(i.Unit)} fingers into {GPPHis(i.Target)} belly. <b>{i.Target.Name}</b> cocks {GPPHis(i.Target)} head to the side, wondering to the answer. \"You are!\" The answer sends the canine into an excited, jiggling jumping spree.",
            targetRace: Race.Dog, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ActorHumanoid(s)),
        new EventString((i) => $"<b>{i.Unit.Name}</b>’s attentive massage of <b>{i.Target.Name}</b>’s stuffed midsection convinces the voracious canine to make {GPPHim(i.Unit)} {GPPHis(i.Target)} master no matter the cost.",
            targetRace: Race.Dog, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) || (s.Unit.HasTrait(TraitType.SeductiveTouch) && TacticalUtilities.Units.Where(actor => actor.Unit == s.Target)?.FirstOrDefault().TurnsSinceLastParalysis <= 0) ),
        new EventString((i) => $"<b>{i.Target.Name}</b> just loves <b>{i.Unit.Name}</b> so much! {GPPHe(i.Target)} can’t help {GPPHimself(i.Target)} from using {GPPHis(i.Target)} sloshing belly weight to push {GPPHim(i.Unit)} over and assaulting {GPPHim(i.Unit)} in a flurry of licks.",
            targetRace: Race.Dog, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatible(s)),
        new EventString((i) => $"<b>{i.Target.Name}</b> lolls out {GPPHis(i.Target)} tongue and gently starts to lick <b>{ApostrophizeWithOrWithoutS(i.Unit.Name)}</b> face as {GPPHe(i.Unit)} work{SIfSingular(i.Unit)} to satisfy {GPPHis(i.Target)} gurgling tummy.",
            targetRace: Race.Dog, priority: 9),
        new EventString((i) => $"Rubbing {GPPHis(i.Target)} distended tummy causes <b>{i.Target.Name}</b> to start thumping {GPPHis(i.Target)} leg. <b>{i.Unit.Name}</b> finds this insanely cute and redoubles {GPPHis(i.Unit)} efforts.",
            targetRace: Race.Dog, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s)),
        new EventString((i) => $"<b>{i.Target.Name}</b> lies on {GPPHis(i.Target)}back, presenting {GPPHis(i.Target)} enormous gut to <b>{i.Unit.Name}</b> in hopes of receiving a belly rub and maybe something a bit lewder. <b>{i.Unit.Name}</b> obliges both desires.",
            targetRace: Race.Dog, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s)),
        new EventString((i) => $"\"I don’t like feeling empty,\" <b>{i.Target.Name}</b> says as her master presses into her belly, \"After this meal’s all gone, can you fill me with puppies?\" the dog girl asks with surprising innocence. <b>{i.Unit.Name}</b> stutters for a moment but can’t see a good reason why {GPPHe(i.Unit)} shouldn’t.",
            targetRace: Race.Dog, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s) && ActorHumanoid(s) && s.Target.GetGender() == Gender.Female),

        new EventString((i) => $"<b>{i.Target.Name}</b> wrap{SIfSingular(i.Target)} {GPPHimself(i.Target)} around <b>{i.Unit.Name}</b>, pressing {GPPHis(i.Target)} sloshing gut against {GPPHim(i.Unit)} while digging {GPPHis(i.Target)} claws into {GPPHis(i.Unit)} back.",
            targetRace: Race.Cat, priority: 9),
        new EventString((i) => $"<b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> slender tail flicks back and forth, swaying with <b>{ApostrophizeWithOrWithoutS(i.Unit.Name)}</b> rubbing motions across {GPPHis(i.Target)} prey filled gut.",
            targetRace: Race.Cat, priority: 9),
        new EventString((i) => $"The attentions on {GPPHis(i.Target)} bursting gut from the one {GPPHe(i.Target)} love{SIfSingular(i.Target)} cause <b>{i.Target.Name}</b> to inadvertently start purring. The feline predator catches {GPPHimself(i.Target)} and stops but it’s too late, <b>{i.Unit.Name}</b> already thinks {GPPHe(i.Target)} is adorable.",
            targetRace: Race.Cat, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatible(s)),
        new EventString((i) => $"<b>{i.Target.Name}</b> lifts {GPPHis(i.Target)} arms high, stretching {GPPHis(i.Target)} body out as <b>{i.Unit.Name}</b> caresses {GPPHis(i.Target)} most recent meal.",
            targetRace: Race.Cat, priority: 9),
        new EventString((i) => $"<b>{i.Target.Name}</b> stares imperiously with {GPPHis(i.Target)} slit eyes as <b>{i.Unit.Name}</b> attends to her greedy belly’s physical needs while thinking about what other parts of her body could be satisfied also.",
            targetRace: Race.Cat, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s) && s.Target.GetGender() == Gender.Female),
        new EventString((i) => $"<b>{i.Target.Name}</b> lies on {GPPHis(i.Target)} side and tries to lick {GPPHis(i.Target)} nethers, but {GPPHis(i.Target)} prey packed tummy prevents the flexible predator from doing so. \"I can’t reach,\" {GPPHe(i.Target)} says, lifting {GPPHis(i.Target)} leg high while seductively looking at <b>{i.Unit.Name}</b> \"Would you mind?\" The {GetRaceDescSingl(i.Unit)} quickly gets to work satisfying the demanding feline.",
            targetRace: Race.Cat, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s)),
        new EventString((i) => $"\"You know,\" <b>{i.Target.Name}</b> says, licking her paw as <b>{i.Unit.Name}</b> tends to {GPPHis(i.Target)} gurgling midsection, \"we would make beautiful kittens.\"",
            targetRace: Race.Cat, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s) && ActorHumanoid(s) && s.Target.GetGender() == Gender.Female),


        new EventString((i) => $"<b>{i.Target.Name}</b> growls and shows {GPPHis(i.Target)} teeth as <b>{i.Unit.Name}</b> approaches but starts to wag {GPPHis(i.Target)} tail and softly whine as {GPPHis(i.Target)} indigestion riddled stomach is caressed.",
            targetRace: Race.Wolf, priority: 9),
        new EventString((i) => $"<b>{i.Unit.Name}</b> is surprised when <b>{i.Target.Name}</b> pushes {GPPHim(i.Unit)} over and starts to writhe against {GPPHim(i.Unit)} as the long-fanged predator’s belly wobbles and sloshes while {GPPHe(i.Unit)} press{EsIfSingular(i.Unit)} {GPPHimself(i.Unit)} closer.",
            targetRace: Race.Wolf, priority: 9),
        new EventString((i) => $"As <b>{i.Unit.Name}</b> is passing by, the wolfen suddenly starts to aggressively rub {GPPHis(i.Target)} gorged stomach against {GPPHim(i.Unit)}. {GPPHe(i.Target)} doesn’t want to share {GPPHis(i.Target)} new mate with {GPPHis(i.Target)} pack mates so {GPPHeIsAbbr(i.Target)} marking {GPPHim(i.Unit)} with {GPPHis(i.Target)} scent.",
            targetRace: Race.Wolf, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatible(s)),
        new EventString((i) => $"<b>{i.Target.Name}</b> thrusts {GPPHis(i.Target)} distended, prey filled gut into <b>{ApostrophizeWithOrWithoutS(i.Unit.Name)}</b> face. After a moment’s pause the {GetRaceDescSingl(i.Target)} says, \"Well? It’s not going to massage itself! Or would you rather do so from the inside?\" With urgency, the gurgling belly is attended to.",
            targetRace: Race.Wolf, priority: 9, conditional: s => ActorHumanoid(s)),
        new EventString((i) => $"<b>{i.Unit.Name}</b> tries {GPPHis(i.Unit)} best to pay attention to the vicious wolfen’s tummy as it gurgles away its occupant but the {GetRaceDescSingl(i.Target)}’s heavy panting and long stares keep distracting {GPPHim(i.Unit)}. As {GPPHe(i.Unit)} lift{SIfSingular(i.Unit)} the packed guts for an underside rub {GPPHe(i.Unit)} find{SIfSingular(i.Unit)} that the predator is most certainly in heat.",
            targetRace: Race.Wolf, priority: 9, conditional: s => ReqTargetCompatibleLewd(s)),

        new EventString((i) => $"<b>{i.Unit.Name}</b> starts to rub the short demon’s overpacked tummy, eliciting a mischievous cackle from {GPPHim(i.Target)}.",
            targetRace: Race.Imp, priority: 9),
        new EventString((i) => $"<b>{i.Unit.Name}</b> sits with <b>{i.Target.Name}</b> in {GPPHis(i.Unit)} lap, {GPPHe(i.Unit)} reach{EsIfSingular(i.Unit)} over and massage{SIfSingular(i.Unit)} the Imp but {GPPHe(i.Target)} start{SIfSingular(i.Unit)} grinding {GPPHis(i.Target)} hips back and forth, making {GPPHis(i.Target)} meal slosh in {GPPHis(i.Target)} guts and {GPPHis(i.Target)} ass press against {GPPHis(i.Target)} attendant.",
            targetRace: Race.Imp, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s) && ActorHumanoid(s)),

        new EventString((i) => $"<b>{i.Unit.Name}</b> feels {GPPHis(i.Unit)} hand across <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> smooth stomach scales as {GPPHis(i.Target)} guts work away its last occupant. The lizard predator watches the {GetRaceDescSingl(i.Unit)} do so with unknown intent.",
            targetRace: Race.Lizard, priority: 9),
        new EventString((i) => $"As <b>{i.Unit.Name}</b> explores the scaled predator’s body, {GPPHeIs(i.Unit)} startled when suddenly propositioned, \"You will mate with <b>{i.Target.Name}</b>,\" <b>{i.Unit.Name}</b> stumbles with {GPPHis(i.Unit)} words for a moment before {GPPHe(i.Target)} slap{SIfSingular(i.Target)} {GPPHis(i.Target)} wiggling stomach, \"Or you will join them.\" This prompts a swift agreement.",
            targetRace: Race.Lizard, priority: 9, conditional: s => ReqTargetCompatibleLewd(s) && ActorHumanoid(s)),
        new EventString((i) => $"<b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> tummy, padded with the melting flesh of gurgling warriors, roars angrily as indigestion sets in. {GPPHe(i.Target)} quickly approaches {GPPHis(i.Target)} favorite mate and thrust{SIfSingular(i.Target)} the bulging mass against {GPPHim(i.Unit)}. <b>{i.Unit.Name}</b> starts to massage {GPPHim(i.Target)} without question.",
            targetRace: Race.Lizard, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side)),
        new EventString((i) => $"<b>{i.Unit.Name}</b> is suddenly knocked over by a violent tummy wobble as <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> prey makes one last attempt at escaping the lizard’s guts. With a reptilian rage, {GPPHe(i.Target)} slam{SIfSingular(i.Target)} {GPPHis(i.Target)} fist into {GPPHis(i.Target)} belly, knocking the poor prey out. {GPPHe(i.Target)} then hugs {GPPHis(i.Target)} hurt mate, desperately apologizing.",
            targetRace: Race.Lizard, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s)),
        new EventString((i) => $"\"<b>{i.Target.Name}</b> will never eat you, even if you become weak\" the lizard predator says while <b>{i.Unit.Name}</b> caresses {GPPHis(i.Target)} sloshing stomach. Before a thanks can be offered, the reptile continues, \"Reward this warrior’s compassion with passionate mating.\"",
            targetRace: Race.Lizard, priority: 9, conditional: s => ReqTargetCompatibleLewd(s) && ActorHumanoid(s)),

        new EventString((i) => $"<b>{i.Unit.Name}</b> can tell the process of digesting {GPPHis(i.Target)} last victim is no easy task for the herbivorous rabbit person and works diligently to help <b>{i.Target.Name}</b> break down {GPPHis(i.Target)} prey.",
            targetRace: Race.Bunny, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side)),
        new EventString((i) => $"<b>{i.Target.Name}</b> holds {GPPHis(i.Target)} belly and groans miserably as it breaks down the meat within. {GPPHis(i.Target)} pain soon elicits the aid of <b>{i.Unit.Name}</b> who comes and gently massages the carrot-eater’s unusual meal.",
            targetRace: Race.Bunny, priority: 9),
        new EventString((i) => $"Even though <b>{i.Target.Name}</b> has a gurgling gut and indigestion, {GPPHe(i.Target)} hop{SIfSingular(i.Target)} onto <b>{i.Unit.Name}</b> with abandon and starts fucking like {GPPHis(i.Target)} namesake.",
            targetRace: Race.Bunny, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s)),
        new EventString((i) => $"\"Urgh,\" <b>{i.Target.Name}</b> moans while <b>{i.Unit.Name}</b> caresses {GPPHis(i.Target)} rumbling bulge, \"Why can’t we fight something tasty from now on? Like carrot people! Or cabbage patch monsters!\" The joke goes over well, bringing out a chuckle from {GPPHis(i.Target)} loving attendant.",
            targetRace: Race.Bunny, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s) && ActorHumanoid(s)),
        new EventString((i) => $"As <b>{i.Unit.Name}</b> rubs the rabbit’s stomach, {GPPHeIsAbbr(i.Unit)} suddenly stopped when <b>{i.Target.Name}</b> says, \"Wait, can you hear that?\" as {GPPHe(i.Unit)} lower{SIfSingular(i.Unit)} {GPPHis(i.Unit)} head to rest against {GPPHis(i.Target)} rumbling gut. \"They’re saying something! It sounds like…\" A moment passes before the bucktoothed carnivore lets lose a loud belch followed by a fit of laughing.",
            targetRace: Race.Bunny, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ActorHumanoid(s)),


        new EventString((i) => $"“I ate them, master! I ate them just for you!” <b>{i.Target.Name}</b> declares as <b>{i.Unit.Name}</b> tends to {GPPHis(i.Target)} gut while it dutifully turns its content into a slurry of nutritious paste. “Please love me! I’m a good mate, I swear it!” To emphasize the point, {GPPHe(i.Target)} start{SIfSingular(i.Target)} swaying {GPPHis(i.Target)} body, making {GPPHis(i.Target)} most sensual aspects stand out to {GPPHis(i.Target)} prospective mate.",
            targetRace: Race.Dog, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s) && ActorHumanoid(s)),
        new EventString((i) => $"“You know,” <b>{i.Target.Name}</b> says imperiously as {GPPHis(i.Target)} beloved presses into {GPPHis(i.Target)} soft, supple body, “I’m actually very naughty.” {GPPHe(i.Target)} rub{SIfSingular(i.Target)} the side of {GPPHis(i.Target)} bloated meat filled gut as it lets out a groan and leans against <b>{i.Unit.Name}</b> while whispering into {GPPHis(i.Unit)} ear, “You should probably put a collar on me. Then we can start to work on... discipline.”",
            targetRace: Race.Dog, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s) && ActorHumanoid(s)),
        new EventString((i) => $"“You know I can smell it on you, right?” <b>{i.Target.Name}</b> states as <b>{i.Unit.Name}</b> lovingly tends to {GPPHis(i.Target)} tummy, full of digestive juices and melting flesh. “Your lusting, your desire to have your way with me. The air’s thick with the scent,” the canine predator continues as lovingly tended gut rumbles, “Don’t worry. I want that too.”",
            targetRace: Race.Dog, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s) && ActorHumanoid(s)),
        new EventString((i) => $"<b>{i.Target.Name}</b> wastes no time in accepting the advances of {GPPHis(i.Target)} favorite lover. Soon enough the two are working furiously to satiate one another’s carnal desires, <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> bulging stomach bouncing wildly the whole time. As they’re wrapped together, <b>{i.Unit.Name}</b> begins to rub behind the canine warrior’s ears, eliciting a shocked gasp and belch from {GPPHis(i.Unit)} partner.",
            targetRace: Race.Dog, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s)),

        new EventString((i) => $"<b>{i.Target.Name}</b>, with great melodrama, begins to wail about {GPPHis(i.Target)} pained stomach as it bubbled away its last victim. <b>{i.Unit.Name}</b>, naïve against the wiley fox’s acting, immediately starts lathering the bushy tailed warrior with attention and rubbing.",
            targetRace: Race.Fox, priority: 9),
        new EventString((i) => $"\"You know,\" <b>{i.Target.Name}</b> muses with a sly grin as <b>{i.Unit.Name}</b> tends to {GPPHis(i.Target)} sloshing tummy, \"You could always massage me from the inside, it’d be much more relaxing. I promise I wouldn’t let you melt away!\" The trickster is surprised and flattered when {GPPHis(i.Target)} attendant doesn’t oppose the idea because {GPPHe(i.Unit)} trust{SIfSingular(i.Unit)} {GPPHim(i.Target)} so much.",
            targetRace: Race.Fox, priority: 9, conditional: s => ReqTargetCompatible(s) && ActorHumanoid(s)),

        new EventString((i) => $"<b>{i.Target.Name}</b>, with great melodrama, begins to wail about {GPPHis(i.Target)} pained stomach as it bubbled away its last victim. <b>{i.Unit.Name}</b>, naïve against the wiley fox’s acting, immediately starts lathering the bushy tailed warrior with attention and rubbing.",
            targetRace: Race.Youko, priority: 9),
        new EventString((i) => $"\"You know,\" <b>{i.Target.Name}</b> muses with a sly grin as <b>{i.Unit.Name}</b> tends to {GPPHis(i.Target)} sloshing tummy, \"You could always massage me from the inside, it’d be much more relaxing. I promise I wouldn’t let you melt away!\" The trickster is surprised and flattered when {GPPHis(i.Target)} attendant doesn’t oppose the idea because {GPPHe(i.Unit)} trust{SIfSingular(i.Unit)} {GPPHim(i.Target)} so much.",
            targetRace: Race.Youko, priority: 9, conditional: s => ReqTargetCompatible(s) && ActorHumanoid(s)),

        new EventString((i) => $"At <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> behest, <b>{i.Unit.Name}</b> begins to tend to the great dragon’s mighty belly as it melts {GPPHis(i.Target)} foes away into a fine sludge.",
            targetRace: Race.Dragon, priority: 9),
        new EventString((i) => $"<b>{i.Unit.Name}</b> has to scratch hard against the huge dragon’s shifting tummy scales to even be felt. <b>{i.Target.Name}</b> cares not, simply basking in {GPPHis(i.Target)} favorite servant’s attention.",
            targetRace: Race.Dragon, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side)),
        new EventString((i) => $"\"This is simply divine,\" <b>{i.Target.Name}</b> says haughtily as <b>{i.Unit.Name}</b> deftly attends to {GPPHis(i.Target)} prey laden belly. \"I’ll need to grant you a reward from my horde or perhaps you would prefer a… different prize,\" {GPPHe(i.Target)} say{SIfSingular(i.Target)} coyly with a seductive look while raising {GPPHis(i.Target)} tail.",
            targetRace: Race.Dragon, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s) && ActorHumanoid(s)),
        new EventString((i) => $"Servants like <b>{i.Unit.Name}</b> remind <b>{i.Target.Name}</b> why {GPPHe(i.Target)} do{EsIfSingular(i.Target)}n’t simply devour everyone in {GPPHis(i.Target)} path. The thought however conflicts with {GPPHis(i.Target)} sloshing midsection melting a number of mortals' flesh and bone as the aforementioned servant rubs it.",
            targetRace: Race.Dragon, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side)),
        new EventString((i) => $"<b>{i.Target.Name}</b> can’t help but stare lovingly at <b>{i.Unit.Name}</b> as {GPPHe(i.Unit)} tend{SIfSingular(i.Unit)} to {GPPHis(i.Target)} burgeoning mass filled with the foolish and weak.",
            targetRace: Race.Dragon, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side)),
        new EventString((i) => $"While <b>{i.Unit.Name}</b> is certainly weaker than the great dragon, <b>{i.Target.Name}</b> can’t help but obey {GPPHis(i.Unit)} every command when it comes to massaging {GPPHis(i.Target)} imperious guts. At times like this {GPPHe(i.Target)} would even let {GPPHis(i.Unit)} make more sensual desires come to the light.",
            targetRace: Race.Dragon, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s)),
        new EventString((i) => $"\"Come closer,\" <b>{i.Target.Name}</b> says to <b>{i.Unit.Name}</b> as {GPPHis(i.Target)} filled guts rumble ominously. \"I can think of nothing better than your touch against my scales. Touch me as you please... wherever you please.\" The imposing dragon rolls over, inviting {GPPHis(i.Target)} favorite servant to explore {GPPHis(i.Target)} vast body.",
            targetRace: Race.Dragon, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s) && ActorHumanoid(s)),
        new EventString((i) => $"Laying on {GPPHis(i.Target)} back, <b>{i.Target.Name}</b> lifts <b>{i.Unit.Name}</b> up and places {GPPHim(i.Unit)} in the middle of {GPPHis(i.Target)} sloshing scaled belly. The servant goes to work massaging the powerful entity before {GPPHeIsAbbr(i.Unit)} interrupted by a booming voice, \"There’s an itch a bit lower, lower… even lower,\" soon enough the servant finds {GPPHimself(i.Unit)} tending to {GPPHis(i.Unit)} master’s most sensitive parts.",
            targetRace: Race.Dragon, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s) && ActorHumanoid(s)),

        new EventString((i) => $"<b>{i.Target.Name}</b> watches <b>{i.Unit.Name}</b> as {GPPHe(i.Unit)} tr{IesIfSingular(i.Target)} to massage {GPPHis(i.Target)} sturdy, gurgling midsection in vain. Eventually {GPPHis(i.Target)} attendant just slams into {GPPHis(i.Target)} gut with a shoulder, sending {GPPHis(i.Target)} meal into another stomach chamber and a wave of pleasure through the bovine predator.",
            targetRace: Race.Taurus, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side)),
        new EventString((i) => $"<b>{i.Target.Name}</b> grabs <b>{i.Unit.Name}</b> as {GPPHe(i.Unit)} pass{EsIfSingular(i.Unit)} by and forces {GPPHis(i.Unit)} lips onto {GPPHis(i.Target)} breast. {Capitalize(GPPHis(i.Target))} latest burbling tummy occupant quickly becoming a thick, creamy milk that pained her engorged breast. <b>{i.Unit.Name}</b>, initially surprised, now greedily sucks down the delicious milk and elicits pleasured moans from the cowgirl.",
            targetRace: Race.Taurus, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s) && s.Unit.HasBreasts),
        new EventString((i) => $"<b>{i.Unit.Name}</b>, with a surprising amount of confidence, grabs the bovine predator by the horns and forces {GPPHim(i.Target)} onto {GPPHis(i.Target)} hands and knees. With {GPPHis(i.Target)} gut pressed against the ground, <b>{i.Target.Name}</b> is shocked but excited when {GPPHis(i.Target)} attendant begins to milk {GPPHim(i.Target)}.",
            targetRace: Race.Taurus, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s) && s.Unit.HasBreasts),
        new EventString((i) => $"With a wobbling tummy, <b>{i.Target.Name}</b> wraps <b>{i.Unit.Name}</b> into a deep, soft, warm hug. As it goes on, <b>{i.Unit.Name}</b> inadvertently calls <b>{i.Target.Name}</b> {(i.Target.HasBreasts ? "mommy" : "daddy")} while one party is mortified by this, the other beams with pride and no small bit of arousal.",
            targetRace: Race.Taurus, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s)),
        new EventString((i) => $"<b>{i.Target.Name}</b> sits down on {GPPHis(i.Target)} fat laden ass, letting {GPPHis(i.Target)} belly rest on the ground in an attempt to relive {GPPHis(i.Target)} indigestion as {GPPHis(i.Target)} meal passes from one stomach to the next. <b>{i.Unit.Name}</b>, seeing {GPPHis(i.Target)} discomfort arrives and attends to {GPPHis(i.Target)} sloshing belly. <b>{i.Target.Name}</b> basks in the attention, leaning back on {GPPHis(i.Target)} elbows as {GPPHeIsAbbr(i.Target)} rubbed down.",
            targetRace: Race.Taurus, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side)),
        new EventString((i) => $"<b>{i.Unit.Name}</b> begins to explore the bovine’s massive form, subtly venturing further away from the gurgling midriff. <b>{i.Target.Name}</b> pretends not to notice but can’t hide {GPPHis(i.Target)} excitement as the massage reaches {GPPHis(i.Target)} more sensitive regions.",
            targetRace: Race.Taurus, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s)),
        new EventString((i) => $"<b>{i.Target.Name}</b> thinks {GPPHe(i.Target)} wouldn’t mind being milked by such diligent hands as <b>{i.Unit.Name}</b> tends to {GPPHis(i.Target)} prey filled guts.",
            targetRace: Race.Taurus, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s) && s.Unit.HasBreasts),
        new EventString((i) => $"As <b>{ApostrophizeWithOrWithoutS(i.Unit.Name)}</b> hands disappear into the soft belly flesh, <b>{i.Target.Name}</b> asks {GPPHim(i.Unit)} if {GPPHe(i.Unit)}'d like to be trapped in {GPPHis(i.Target)} ‘Labyrinth’ later, but the euphemism is lost on the bovine’s prospective lover.",
            targetRace: Race.Taurus, priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatibleLewd(s)),


        new EventString((i) => $"<b>{i.Unit.Name}</b> quickly gets to work rubbing <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> belly like a good little kobold.",
            actorRace: Race.Kobold, priority: 9, conditional: s => Equals(s.Target.Race, Race.Dragon) || Equals(s.Target.Race, Race.EasternDragon)),
        new EventString((i) => $"<b>{i.Unit.Name}</b> hops onto <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> belly and begins to knead and rub it, ellicting a pleasured groan from {GPPHis(i.Unit)} draconic master.",
            actorRace: Race.Kobold, priority: 9, conditional: s => Equals(s.Target.Race, Race.Dragon) || Equals(s.Target.Race, Race.EasternDragon)),
        new EventString((i) => $"<b>{i.Unit.Name}</b> can feel the contents of <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> gut shift as {GPPHe(i.Unit)} press{EsIfSingular(i.Unit)} {GPPHis(i.Unit)} hands on that big scaly gut.",
            priority: 9, conditional: s => Equals(s.Target.Race, Race.Dragon) || Equals(s.Target.Race, Race.EasternDragon)),

        new EventString((i) => $"<b>{i.Unit.Name}</b> moans and groans as {GPPHe(i.Unit)} rub{SIfSingular(i.Unit)} {GPPHis(i.Unit)} full gut.",
            priority: 10, conditional: s => Lewd(s) && (s.Target == s.Unit)),
        new EventString((i) => $"\"Ohhhh...you were soooooo tasty!\" <b>{i.Unit.Name}</b> moans in pleasure as {GPPHe(i.Unit)} rub{SIfSingular(i.Unit)} {GPPHis(i.Unit)} gut.",
            priority: 10, conditional: s => s.Target == s.Unit),

        new EventString((i) => $"\"Mmmmmmmm...\" <b>{i.Target.Name}</b> moans as <b>{i.Unit.Name}</b> rubs and prods the {GetRaceDescSingl(i.Target)}'s full gut.",
            priority: 8),

        new EventString((i) => $"<b>{i.Unit.Name}</b> can't believe {GPPHe(i.Unit)} got the honour to rub the gut of the famous {(TargetHumanoid(i) ? "warrior" : "beast")}, <b>{i.Target.Name}</b>.",
            priority: 9, conditional: s => s.Unit.Level + 9 < s.Target.Level),
        new EventString((i) => $"\"Oh gods this is actually happening!\" <b>{i.Unit.Name}</b> thinks to {GPPHimself(i.Unit)} as {GPPHe(i.Unit)} knead{SIfSingular(i.Unit)} the belly of thier idol, <b>{i.Target.Name}</b>.",
            priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && s.Unit.Level + 9 < s.Target.Level),
        new EventString((i) => $"<b>{ApostrophizeWithOrWithoutS(i.Unit.Name)}</b> eyes light up as the great {(TargetHumanoid(i) ? "warrior" : "beast")}, <b>{i.Target.Name}</b>, lets {GPPHim(i.Unit)} rub {GPPHis(i.Target)} prey-filled gut.",
            priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && s.Unit.Level + 9 < s.Target.Level),
        new EventString((i) => $"<b>{i.Unit.Name}</b> excitedly rubs <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> belly. The famous, battle-hardened {(TargetHumanoid(i) ? "warrior" : "beast")} closing {GPPHis(i.Target)} eyes and nodding as {GPPHis(i.Target)} prey-filled belly is tended to.",
            priority: 9, conditional: s => s.Unit.Level + 9 < s.Target.Level),
        new EventString((i) => $"<b>{i.Unit.Name}</b> vigorously kneads <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> belly hoping that the famous {(TargetHumanoid(i) ? "warrior" : "beast")} will be impressed with {GPPHis(i.Unit)} work.",
            priority: 9, conditional: s => s.Unit.Level + 9 < s.Target.Level),

        new EventString((i) => $"<b>{i.Unit.Name}</b> excitedly rubs the belly of <b>{i.Target.Name}</b>. The famous {(TargetHumanoid(i) ? "warrior" : "beast")} seems very pleased indeed and <b>{i.Unit.Name}</b> hopes it's enough to possibly get a 'special reward' later tonight.",
            priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && Lewd(s) && (s.Unit.Level + 9 < s.Target.Level)),
        new EventString((i) => $"<b>{i.Unit.Name}</b> seductively rubs the belly of their idol, <b>{i.Target.Name}</b>. <b>{i.Unit.Name}</b> makes sure that {GPPHis(i.Unit)} assets draw the strong {(TargetHumanoid(i) ? "warrior" : "beast")}'s attention and hopes that <b>{i.Target.Name}</b> will want to be interested in {GPPHim(i.Unit)}.",
            priority: 9, conditional: s => Lewd(s) && (s.Unit.Level + 9 < s.Target.Level)),
        new EventString((i) => $"As <b>{i.Unit.Name}</b> eagerly rubs the belly of <b>{i.Target.Name}</b>, the famous {(TargetHumanoid(i) ? "warrior" : "beast")} whispers to {GPPHim(i.Unit)}, \"If you keep that up, I might make time for a 'special session' with you tonight.\" <b>{ApostrophizeWithOrWithoutS(i.Unit.Name)}</b> eyes go wide and {GPPHe(i.Unit)} go{EsIfSingular(i.Unit)} back to rubbing with twice the vigor!",
            priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && Lewd(s) && (s.Unit.Level + 9 < s.Target.Level)),
        new EventString((i) => $"As <b>{i.Unit.Name}</b> rubs the belly of <b>{i.Target.Name}</b>, the renowned {(TargetHumanoid(i) ? "warrior" : "beast")} whispers something into {GPPHis(i.Unit)} ear. <b>{ApostrophizeWithOrWithoutS(i.Unit.Name)}</b> eyes light up as {GPPHe(i.Unit)} begin{SIfSingular(i.Unit)} to rub ever harder, hoping to make their idol's prey digest even faster so {GPPHe(i.Unit)} can spend more time with <b>{i.Unit.Name}</b> alone.",
            priority: 9, conditional: s => Lewd(s) && (s.Unit.Level + 9 < s.Target.Level)),
        new EventString((i) => $"\"Keep that up, and I'll give you a passionate night you'll never forget~.\" <b>{i.Target.Name}</b> tells <b>{i.Unit.Name}</b> who immediately rubs harder and faster, still somewhat in disbelief that {GPPHis(i.Unit)} idol is willing to mate with them.",
            priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && Lewd(s) && (s.Unit.Level + 9 < s.Target.Level)),

        //enemy rubs
        new EventString((i) => $"<b>{i.Target.Name}</b> is confused about <b>{ApostrophizeWithOrWithoutS(i.Unit.Name)}</b> sudden affection while {GPPHeIs(i.Target)} digesting {GPPHis(i.Unit)} kin, but takes it as a peace offering considering the obvious difference in might. How adorable.",
            priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && (s.Unit.Level + 9 < s.Target.Level)),
        new EventString((i) => $"<b>{i.Target.Name}</b> assumes the enemy lost {GPPHis(i.Unit)} mind out of pure attraction, causing {GPPHis(i.Target)} ego to be is stroked as much as {GPPHis(i.Target)} gurgling {i.preyLocation.ToSyn()} as {GPPHe(i.Target)} pos{EsIfSingular(i.Target)} and stretches under the intensely pleasing touch.",
            priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ReqTargetCompatible(s)),
        new EventString((i) => $"<b>{i.Unit.Name}</b> dextrously closes in and starts kneading <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> {i.preyLocation.ToSyn()} in the middle of battle, making sure their struggling former ally is processed nicely within the predator.",
            priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side)),
        new EventString((i) => $"<b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> reflexes don't trigger to fend off <b>{i.Unit.Name}</b>, as they lack any killing intent or sudden movements. A careful caress turns into vigorous rubbing that's definitely causing <b>{ApostrophizeWithOrWithoutS(i.Unit.Name)}</b> comrade to be broken down faster. <b>{i.Target.Name}</b> cannot help but muse that maybe this one's useful as more than food.",
            priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side)),
        new EventString((i) => $"Instead of surrendering, <b>{i.Unit.Name}</b> seems to be offering a massage. A really good massage. <b>{i.Target.Name}</b> completely has {GPPHis(i.Target)} guard down as {GPPHe(i.Target)} get{SIfSingular(i.Prey)} lost in the bliss of feeling {GPPHis(i.Target)} prey melt away in record time, but <b>{i.Unit.Name}</b> doesn't take advantage, tending to the {i.preyLocation.ToSyn()} dutifully.",
            priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side)),
        new EventString((i) => $"<b>{i.Target.Name}</b> doesn't regret letting an unarmed <b>{i.Unit.Name}</b> touch {GPPHis(i.Target)} noisy {i.preyLocation.ToSyn()}. The {GetRaceDescSingl(i.Unit)} expertly shifts and softens the {GetRaceDescSingl(i.Target)} food that {GPPHe(i.Unit)} used to call an ally. Perhaps this is a sign {GPPHe(i.Unit)} wish{EsIfSingular(i.Unit)} to be brought inside too!",
            priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && ActorHumanoid(s)),
        new EventString((i) => $"<b>{i.Unit.Name}</b> casually commits high treason by affectionately helping the enemy's {i.preyLocation.ToSyn()} churn down <b>{i.Prey.Name}</b> into more useful stuff.",
            priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side)),
        new EventString((i) => $"<b>{i.Unit.Name}</b> adds insult to injury for <b>{i.Prey.Name}</b>, by vigorously massaging {GPPHis(i.Prey)} voracious captor's {i.preyLocation.ToSyn()} instead of even attempting to help at all.",
            priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && !s.Prey.IsDead),
        new EventString((i) => $"\"Help!!\", cries <b>{i.Prey.Name}</b> from within an ever softening bulge in <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> {i.preyLocation.ToSyn()}. <b>{i.Unit.Name}</b> heeds {GPPHis(i.Prey)} call by helping {GPPHim(i.Prey)} digest into gut slush. Any further protest are drowned out by <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> ensuing carnal symphony.",
            priority: 9, conditional: s => Equals(s.Target.Side, s.Unit.Side) && !s.Prey.IsDead),

        new EventString((i) => $"<b>{i.Unit.Name}</b> caresses <b>{ApostrophizeWithOrWithoutS(i.Target.Name)}</b> {i.preyLocation.ToSyn()} with so much devotion, that <b>{i.Prey.Name}</b> can't help but despair as {GPPHe(i.Prey)} understand{SIfSingular(i.Prey)} {GPPHis(i.Prey)} allies wrote {GPPHim(i.Prey)} off, only considering {GPPHim(i.Prey)} food now, which should just hurry up and liquefy. At least they strive to make it quick and painless?",
            priority: 9, conditional: s => !s.Prey.IsDead && (Equals(s.Target.Side, s.Unit.Side) || (Equals(s.Prey.Side, s.Target.Side) && Equals(s.Target.Side, s.Unit.Side) && !Endo(s)))),

        //new EventString((i) => "",
        //targetRace: Race.Dragon, priority: 9),

            
    };
}